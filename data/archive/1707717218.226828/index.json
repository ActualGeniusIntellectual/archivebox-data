{
    "archive_path": "archive/1707717218.226828",
    "base_url": "xmlns.com/foaf/0.1",
    "basename": "",
    "bookmarked_date": "2024-02-12 05:53",
    "canonical": {
        "archive_org_path": "https://web.archive.org/web/xmlns.com/foaf/0.1",
        "dom_path": "output.html",
        "favicon_path": "favicon.ico",
        "git_path": "git/",
        "google_favicon_path": "https://www.google.com/s2/favicons?domain=xmlns.com",
        "headers_path": "headers.json",
        "htmltotext_path": "htmltotext.txt",
        "index_path": "index.html",
        "media_path": "media/",
        "mercury_path": "mercury/content.html",
        "pdf_path": "output.pdf",
        "readability_path": "readability/content.html",
        "screenshot_path": "screenshot.png",
        "singlefile_path": "singlefile.html",
        "warc_path": "warc/",
        "wget_path": "xmlns.com/foaf/0.1/index.html"
    },
    "domain": "xmlns.com",
    "extension": "",
    "hash": "1V2VNBWM8X65BQKJRJDZ",
    "history": {
        "archive_org": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--head",
                    "--max-time",
                    "60",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 ArchiveBox/0.7.3 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 8.5.0 (x86_64-pc-linux-gnu)",
                    "https://web.archive.org/save/http://xmlns.com/foaf/0.1/"
                ],
                "cmd_version": "curl 8.5.0 (x86_64-pc-linux-gnu)",
                "end_ts": "2024-02-12T06:34:46.406054+00:00",
                "index_texts": null,
                "output": "TimeoutExpired: Command '['curl', '--silent', '--location', '--compressed', '--head', '--max-time', '60', '--user-agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 ArchiveBox/0.7.3 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 8.5.0 (x86_64-pc-linux-gnu)', 'https://web.archive.org/save/http://xmlns.com/foaf/0.1/']' timed out after 60 seconds",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:46.398037+00:00",
                "status": "failed"
            }
        ],
        "dom": [
            {
                "cmd": [
                    "/usr/bin/chromium-browser",
                    "--headless=new",
                    "--no-sandbox",
                    "--no-zygote",
                    "--disable-dev-shm-usage",
                    "--disable-software-rasterizer",
                    "--run-all-compositor-stages-before-draw",
                    "--hide-scrollbars",
                    "--autoplay-policy=no-user-gesture-required",
                    "--no-first-run",
                    "--use-fake-ui-for-media-stream",
                    "--use-fake-device-for-media-stream",
                    "--disable-sync",
                    "--simulate-outdated-no-au='Tue, 31 Dec 2099 23:59:59 GMT'",
                    "--window-size=1440,2000",
                    "--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 ArchiveBox/0.7.3 (+https://github.com/ArchiveBox/ArchiveBox/)",
                    "--dump-dom",
                    "http://xmlns.com/foaf/0.1/"
                ],
                "cmd_version": "Chromium 121.0.6167.57",
                "end_ts": "2024-02-12T06:33:40.534581+00:00",
                "index_texts": null,
                "output": "output.html",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:39.144583+00:00",
                "status": "succeeded"
            }
        ],
        "favicon": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--max-time",
                    "60",
                    "--output",
                    "favicon.ico",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 ArchiveBox/0.7.3 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 8.5.0 (x86_64-pc-linux-gnu)",
                    "https://www.google.com/s2/favicons?domain=xmlns.com"
                ],
                "cmd_version": "curl 8.5.0 (x86_64-pc-linux-gnu)",
                "end_ts": "2024-02-12T06:33:27.896969+00:00",
                "index_texts": null,
                "output": "favicon.ico",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:27.624984+00:00",
                "status": "succeeded"
            }
        ],
        "git": [],
        "headers": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--head",
                    "--max-time",
                    "60",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 ArchiveBox/0.7.3 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 8.5.0 (x86_64-pc-linux-gnu)",
                    "http://xmlns.com/foaf/0.1/"
                ],
                "cmd_version": "curl 8.5.0 (x86_64-pc-linux-gnu)",
                "end_ts": "2024-02-12T06:33:28.399879+00:00",
                "index_texts": null,
                "output": "headers.json",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:27.904758+00:00",
                "status": "succeeded"
            }
        ],
        "htmltotext": [],
        "media": [
            {
                "cmd": [
                    "yt-dlp",
                    "--restrict-filenames",
                    "--trim-filenames",
                    "128",
                    "--write-description",
                    "--write-info-json",
                    "--write-annotations",
                    "--write-thumbnail",
                    "--no-call-home",
                    "--write-sub",
                    "--write-auto-subs",
                    "--convert-subs=srt",
                    "--yes-playlist",
                    "--continue",
                    "--no-abort-on-error",
                    "--ignore-errors",
                    "--geo-bypass",
                    "--add-metadata",
                    "--format=(bv*+ba/b)[filesize<=750m][filesize_approx<=?750m]/(bv*+ba/b)",
                    "http://xmlns.com/foaf/0.1/"
                ],
                "cmd_version": "2023.12.30",
                "end_ts": "2024-02-12T06:33:46.390910+00:00",
                "index_texts": [],
                "output": "media",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:44.158417+00:00",
                "status": "succeeded"
            }
        ],
        "mercury": [
            {
                "cmd": [
                    "/app/node_modules/@postlight/parser/cli.js",
                    "http://xmlns.com/foaf/0.1/"
                ],
                "cmd_version": "1.0.0",
                "end_ts": "2024-02-12T06:33:44.121218+00:00",
                "index_texts": null,
                "output": "mercury",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:42.291532+00:00",
                "status": "succeeded"
            }
        ],
        "pdf": [
            {
                "cmd": [
                    "/usr/bin/chromium-browser",
                    "--headless=new",
                    "--no-sandbox",
                    "--no-zygote",
                    "--disable-dev-shm-usage",
                    "--disable-software-rasterizer",
                    "--run-all-compositor-stages-before-draw",
                    "--hide-scrollbars",
                    "--autoplay-policy=no-user-gesture-required",
                    "--no-first-run",
                    "--use-fake-ui-for-media-stream",
                    "--use-fake-device-for-media-stream",
                    "--disable-sync",
                    "--simulate-outdated-no-au='Tue, 31 Dec 2099 23:59:59 GMT'",
                    "--window-size=1440,2000",
                    "--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 ArchiveBox/0.7.3 (+https://github.com/ArchiveBox/ArchiveBox/)",
                    "--print-to-pdf",
                    "http://xmlns.com/foaf/0.1/"
                ],
                "cmd_version": "Chromium 121.0.6167.57",
                "end_ts": "2024-02-12T06:33:37.521281+00:00",
                "index_texts": null,
                "output": "output.pdf",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:35.771496+00:00",
                "status": "succeeded"
            }
        ],
        "readability": [
            {
                "cmd": [
                    "/app/node_modules/readability-extractor/readability-extractor",
                    "/tmp/tmp202p03s8",
                    "http://xmlns.com/foaf/0.1/"
                ],
                "cmd_version": "0.0.11",
                "end_ts": "2024-02-12T06:33:42.279197+00:00",
                "index_texts": [
                    "Classes\n \n            Class: foaf:Agent \n            Agent - An agent (eg. person, group, software or physical artifact). \n\t    Status:\n\t    stable\n            Properties include:\n   gender\n yahooChatID\n account\n birthday\n icqChatID\n aimChatID\n jabberID\n made\n mbox\n interest\n tipjar\n skypeID\n topic_interest\n age\n mbox_sha1sum\n status\n msnChatID\n openid\n holdsAccount\n weblog\n \n            Used with:\n   maker\n member\n Has Subclass\n   Group\n Person\n Organization\n \n            \n            \nThe Agent class is the class of agents; things that do stuff. A well \nknown sub-class is Person, representing people. Other kinds of agents \ninclude Organization and Group.\n\n\n\nThe Agent class is useful in a few places in FOAF where \nPerson would have been overly specific. For example, the IM chat ID \nproperties such as jabberID are typically associated with people, but \nsometimes belong to software bots.\n\n\n\n\n            [#]  [back to top]\n            \n            \n            Class: foaf:Document \n            Document - A document. \n\t    Status:\n\t    stable\n            Properties include:\n   topic\n primaryTopic\n sha1\n \n            Used with:\n   workInfoHomepage\n workplaceHomepage\n page\n accountServiceHomepage\n openid\n tipjar\n schoolHomepage\n publications\n isPrimaryTopicOf\n interest\n homepage\n weblog\n Has Subclass\n   Image\n PersonalProfileDocument\n \n   \n Disjoint With:\n   Project\n Organization\n \n            \n            \nThe Document class represents those things which are, broadly conceived, \n'documents'.\n\n\n\nThe Image class is a sub-class of Document, since all images \nare documents.\n\n\n\nWe do not (currently) distinguish precisely between physical and electronic documents, or \nbetween copies of a work and the abstraction those copies embody. The relationship between \ndocuments and their byte-stream representation needs clarification (see sha1 \nfor related issues).\n\n\n\n            [#]  [back to top]\n            \n            \n            Class: foaf:Group \n            Group - A class of Agents. \n\t    Status:\n\t    stable\n            Properties include:\n   member\n \n            Subclass Of\n   Agent\n \n            \n            \nThe Group class represents a collection of individual agents (and may \nitself play the role of a Agent, ie. something that can perform actions).\n\n\nThis concept is intentionally quite broad, covering informal and \nad-hoc groups, long-lived communities, organizational groups within a workplace, etc. Some \nsuch groups may have associated characteristics which could be captured in RDF (perhaps a \nhomepage, name, mailing list etc.).\n\n\n\nWhile a Group has the characteristics of a Agent, it \nis also associated with a number of other Agents (typically people) who \nconstitute the Group. FOAF provides a mechanism, the \nmembershipClass property, which relates a Group to a \nsub-class of the class Agent who are members of the group. This is a \nlittle complicated, but allows us to make group membership rules explicit.\n\n\n\nThe markup (shown below) for defining a group is both complex and powerful. It \nallows group membership rules to match against any RDF-describable characteristics of the potential \ngroup members. As FOAF and similar vocabularies become more expressive in their ability to \ndescribe individuals, the Group mechanism for categorising them into \ngroups also becomes more powerful. \n\n\n \nWhile the formal description of membership criteria for a Group may\nbe complex, the basic mechanism for saying that someone is in a Group is\nvery simple. We simply use a member property of the\nGroup to indicate the agents that are members of the group. For example:\n\n \n\n \n\n \n<foaf:Group>\n <foaf:name>ILRT staff</foaf:name>\n <foaf:member>\n  <foaf:Person>\n   <foaf:name>Martin Poulter</foaf:name>\n   <foaf:homepage rdf:resource=\"http://www.ilrt.bris.ac.uk/aboutus/staff/staffprofile/?search=plmlp\"/>\n   <foaf:workplaceHomepage rdf:resource=\"http://www.ilrt.bris.ac.uk/\"/>\n  </foaf:Person>\n </foaf:member>\n</foaf:Group>\n\n\n\n\n\n\nBehind the scenes, further RDF statements can be used to express the rules for being a \nmember of this group. End-users of FOAF need not pay attention to these details.\n\n\n\n\nHere is an example. We define a Group representing those people who \nare ILRT staff members (ILRT is a department at the University of Bristol). The membershipClass property connects the group (conceived of as a social \nentity and agent in its own right) with the class definition for those people who \nconstitute it. In this case, the rule is that all group members are in the \nILRTStaffPerson class, which is in turn populated by all those things that are a \nPerson and which have a workplaceHomepage of \nhttp://www.ilrt.bris.ac.uk/. This is typical: FOAF groups are created by \nspecifying a sub-class of Agent (in fact usually this \nwill be a sub-class of Person), and giving criteria \nfor which things fall in or out of the sub-class. For this, we use the \nowl:onProperty and owl:hasValue properties, \nindicating the property/value pairs which must be true of matching \nagents.\n\n\n\n<!-- here we see a FOAF group described.\n     each foaf group may be associated with an OWL definition \n     specifying the class of agents that constitute the group's membership -->\n<foaf:Group>\n <foaf:name>ILRT staff</foaf:name>\n <foaf:membershipClass>\n    <owl:Class rdf:about=\"http://ilrt.example.com/groups#ILRTStaffPerson\">\n     <rdfs:subClassOf rdf:resource=\"http://xmlns.com/foaf/0.1/Person\"/>\n     <rdfs:subClassOf>\n       <owl:Restriction> \n         <owl:onProperty rdf:resource=\"http://xmlns.com/foaf/0.1/workplaceHomepage\"/>\n         <owl:hasValue rdf:resource=\"http://www.ilrt.bris.ac.uk/\"/>\n       </owl:Restriction> \n     </rdfs:subClassOf>\n   </owl:Class>\n </foaf:membershipClass>\n</foaf:Group>\n\n\n  \n\n\nNote that while these example OWL rules for being in the eg:ILRTStaffPerson class are \nbased on a Person having a particular \nworkplaceHomepage, this places no obligations on the authors of actual \nFOAF documents to include this information. If the information is included, then \ngeneric OWL tools may infer that some person is an eg:ILRTStaffPerson. To go the extra \nstep and infer that some eg:ILRTStaffPerson is a member of the group \nwhose name is \"ILRT staff\", tools will need some knowledge of the way \nFOAF deals with groups. In other words, generic OWL technology gets us most of the way, \nbut the full Group machinery requires extra work for implimentors.\n\n\n\nThe current design names the relationship as pointing from the group, \nto the member. This is convenient when writing XML/RDF that encloses the members within \nmarkup that describes the group. Alternate representations of the same content are \nallowed in RDF, so you can write claims about the Person and the Group without having to \nnest either description inside the other. For (brief) example:\n\n\n\n<foaf:Group>\n <foaf:member rdf:nodeID=\"martin\"/>\n <!-- more about the group here -->\n</foaf:Group>\n<foaf:Person rdf:nodeID=\"martin\">\n  <!-- more about martin here -->\n</foaf:Person>\n\n\n\n\nThere is a FOAF issue tracker \nassociated with this FOAF term. A design goal is to make the most of W3C's OWL language for representing group-membership \ncriteria, while also making it easy to leverage existing groups and datasets available \nonline (eg. buddylists, mailing list membership lists etc). Feedback on the current design \nis solicited! Should we consider using SPARQL queries instead, for example?\n\n\n\n            [#]  [back to top]\n            \n            \n            Class: foaf:Image \n            Image - An image. \n\t    Status:\n\t    stable\n            Properties include:\n   depicts\n thumbnail\n \n            Used with:\n   img\n thumbnail\n depiction\n Subclass Of\n   Document\n \n   \n \n            \n            \nThe class Image is a sub-class of Document \ncorresponding to those documents which are images.\n\n\n\nDigital images (such as JPEG, PNG, GIF bitmaps, SVG diagrams etc.) are examples of \nImage. \n\n\n\n\n            [#]  [back to top]\n            \n            \n            Class: foaf:Organization \n            Organization - An organization. \n\t    Status:\n\t    stable\n            \n            Subclass Of\n   Agent\n \n   \n Disjoint With:\n   Document\n Person\n \n            \n            \nThe Organization class represents a kind of Agent \ncorresponding to social instititutions such as companies, societies etc.\n\n\n\nThis is a more 'solid' class than Group, which allows \nfor more ad-hoc collections of individuals. These terms, like the corresponding\nnatural language concepts, have some overlap, but different emphasis.\n\n\n            [#]  [back to top]\n            \n            \n            Class: foaf:Person \n            Person - A person. \n\t    Status:\n\t    stable\n            Properties include:\n   plan\n surname\n geekcode\n pastProject\n lastName\n family_name\n publications\n currentProject\n familyName\n firstName\n workInfoHomepage\n myersBriggs\n schoolHomepage\n img\n workplaceHomepage\n knows\n \n            Used with:\n   knows\n Subclass Of\n   Agent\n Spatial Thing\n \n   \n Disjoint With:\n   Project\n Organization\n \n            \n            \nThe Person class represents people. Something is a \nPerson if it is a person. We don't nitpic about whether they're \nalive, dead, real, or imaginary. The Person class is a sub-class of the \nAgent class, since all people are considered 'agents' in FOAF. \n\n\n\n            [#]  [back to top]\n            \n            \n\n            Class: foaf:OnlineAccount \n            Online Account - An online account. \n\t    Status:\n\t    testing\n            Properties include:\n   accountName\n accountServiceHomepage\n \n            Used with:\n   account\n holdsAccount\n Subclass Of\n   Thing\n Has Subclass\n   Online E-commerce Account\n Online Gaming Account\n Online Chat Account\n \n   \n \n            \n            \nThe OnlineAccount class represents the provision of some form of online \nservice, by some party (indicated indirectly via a accountServiceHomepage) to some Agent. The \naccount property of the agent is used to indicate accounts that are associated with the agent.\n\n\n\nSee OnlineChatAccount for an example. Other sub-classes include OnlineEcommerceAccount and OnlineGamingAccount.\n\n\n\nOne deployment style for this construct is to use URIs for well-known documents (or other entities) that strongly embody the account-holding relationship; for \nexample, user profile pages on social network sites. This has the advantage of providing URIs that are likely to be easy to link with other information,\nbut means that the instances of this class should not be considered 'accounts' in the abstract or business sense of a 'contract'.\n\n\n            [#]  [back to top]\n            \n            \n            Class: foaf:PersonalProfileDocument \n            PersonalProfileDocument - A personal profile RDF document. \n\t    Status:\n\t    testing\n            \n            Subclass Of\n   Document\n \n            \n            \nThe PersonalProfileDocument class represents those\nthings that are a Document, and that use RDF to\ndescribe properties of the person who is the maker\nof the document. There is just one Person described in\nthe document, ie.\nthe person who made it and who will be its\nprimaryTopic.\n\n\n\nThe PersonalProfileDocument class, and FOAF's\nassociated conventions for describing it, captures an important\ndeployment pattern for the FOAF vocabulary. FOAF is very often used in\npublic RDF documents made available through the Web. There is a\ncolloquial notion that these \"FOAF files\" are often somebody's\nFOAF file. Through PersonalProfileDocument we provide\na machine-readable expression of this concept, providing a basis for \nFOAF documents to make claims about their maker and topic.\n\n\n\nWhen describing a PersonalProfileDocument it is\ntypical (and useful) to describe its associated Person\nusing the maker property. Anything that is a\nPerson and that is the maker of some\nPersonalProfileDocument will be the primaryTopic of\nthat Document. Although this can be inferred, it is\noften helpful to include this information explicitly within the\nPersonalProfileDocument.\n\n\n\nFor example, here is a fragment of a personal profile document which\ndescribes its author explicitly:\n\n\n<foaf:Person rdf:nodeID=\"p1\">\n <foaf:name>Dan Brickley</foaf:name>\n <foaf:homepage rdf:resource=\"http://danbri.org/\"/>\n <!-- etc... -->\n</foaf:Person>\n\n<foaf:PersonalProfileDocument rdf:about=\"\">\n   <foaf:maker rdf:nodeID=\"p1\"/>\n   <foaf:primaryTopic rdf:nodeID=\"p1\"/>\n</foaf:PersonalProfileDocument>\n\n\n\n\nNote that a PersonalProfileDocument will have some\nrepresentation as RDF. Typically this will be in W3C's RDF/XML syntax,\nhowever we leave open the possibility for the use of other notations, or\nrepresentational conventions including automated transformations from\nHTML (GRDDL spec for\none such technique).\n\n\n\n\n            [#]  [back to top]\n            \n            \n            Class: foaf:Project \n            Project - A project (a collective endeavour of some kind). \n\t    Status:\n\t    testing\n            \n            \n   \n Disjoint With:\n   Document\n Person\n \n            \n            \nThe Project class represents the class of things that are 'projects'. These \nmay be formal or informal, collective or individual. It is often useful to indicate the \nhomepage of a Project.\n\n\n\nFurther work is needed to specify the connections between this class and the FOAF properties \ncurrentProject and pastProject.\n\n\n            [#]  [back to top]\n            \n            \n\n            Class: foaf:LabelProperty \n            Label Property - A foaf:LabelProperty is any RDF property with texual values that serve as labels. \n\t    Status:\n\t    unstable\n            \n            \n   \n \n            \n            \nA LabelProperty is any RDF property with texual values that serve as labels.\n\n\n\nAny property that is a LabelProperty is effectively a sub-property of rdfs:label. This utility\nclass provides an alternate means of expressing this idea, in a way that may help with OWL 2.0 DL compatibility.\n\n\n\n            [#]  [back to top]\n            \n            \n            Class: foaf:OnlineChatAccount \n            Online Chat Account - An online chat account. \n\t    Status:\n\t    unstable\n            \n            Subclass Of\n   Online Account\n \n   \n \n            \n            \nA OnlineChatAccount is a OnlineAccount devoted to \nchat / instant messaging. The account may offer other services too; FOAF's \nsub-classes of OnlineAccount are not mutually disjoint.\n\n\n\nThis is a generalization of the FOAF Chat ID properties, \njabberID, aimChatID, \nskypeID, msnChatID, icqChatID and \nyahooChatID. \n\n\n\nUnlike those simple properties, OnlineAccount and associated FOAF terms \nallows us to describe a great variety of online accounts, without having to anticipate \nthem in the FOAF vocabulary.\n\n\n\nFor example, here is a description of an IRC chat account, specific to the Freenode IRC \nnetwork:\n\n\n\n<foaf:Person>\n  <foaf:name>Dan Brickley</foaf:name>\n  <foaf:account>\n    <foaf:OnlineAccount>\n      <rdf:type rdf:resource=\"http://xmlns.com/foaf/0.1/OnlineChatAccount\"/>\n      <foaf:accountServiceHomepage \n               rdf:resource=\"http://www.freenode.net/\"/>\n      <foaf:accountName>danbri</foaf:accountName>\n    </foaf:OnlineAccount>\n  </foaf:account>\n</foaf:Person>\n\n\n\n\nNote that it may be impolite to carelessly reveal someone else's chat identifier (which \nmight also serve as an indicate of email address) As with email,  there are privacy and \nanti-SPAM considerations. FOAF does not currently provide a way to  represent an \nobfuscated chat ID (ie. there is no parallel to the mbox / \nmbox_sha1sum mapping). \n\n\nIn addition to the generic OnlineAccount and \nOnlineChatAccount mechanisms, \nFOAF also provides several convenience chat ID properties \n(jabberID, aimChatID, icqChatID, \nmsnChatID,yahooChatID, skypeID). \nThese serve as as a shorthand for some common cases; their use may not always be \nappropriate.\n\n\nWe should specify some mappings between the abbreviated and full representations of \nJabber, AIM, MSN, ICQ, Yahoo! and MSN chat \naccounts. This has been done for skypeID. This requires us to \nidentify an appropriate accountServiceHomepage for each. If we \nwanted to make the OnlineAccount mechanism even more generic, we could \ninvent a relationship that holds between a OnlineAccount instance and a \nconvenience property. To continue the example above, we could describe how Freenode could define a property 'fn:freenodeChatID' \ncorresponding to Freenode online accounts.\n\n\n            [#]  [back to top]\n            \n            \n            Class: foaf:OnlineEcommerceAccount \n            Online E-commerce Account - An online e-commerce account. \n\t    Status:\n\t    unstable\n            \n            Subclass Of\n   Online Account\n \n   \n \n            \n            \nA OnlineEcommerceAccount is a OnlineAccount devoted to \nbuying and/or selling of goods, services etc. Examples include Amazon, eBay, PayPal, thinkgeek, etc.\n\n\n\n            [#]  [back to top]\n            \n            \n            Class: foaf:OnlineGamingAccount \n            Online Gaming Account - An online gaming account. \n\t    Status:\n\t    unstable\n            \n            Subclass Of\n   Online Account\n \n   \n \n            \n            \nA OnlineGamingAccount is a OnlineAccount devoted to \nonline gaming.\n\n\n\nExamples might include EverQuest, \nXbox live, Neverwinter Nights, etc., as well as older text-based \nsystems (MOOs, MUDs and suchlike).\n\n\n            [#]  [back to top]\n            \n            \nProperties\n \n            Property: foaf:homepage \n            homepage - A homepage for some thing. \n\t    Status:\n\t    stable\n            Domain:\n having this property implies being a  Thing\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n Inverse Functional Property\n   \n            \n            \nThe homepage property relates something to a homepage about it.\n\n\n\nMany kinds of things have homepages. FOAF allows a thing to have multiple homepages, but \nconstrains homepage so that there can be only one thing that has any \nparticular homepage.\n\n\n\nA 'homepage' in this sense is a public Web document, typically but not necessarily \navailable in HTML format. The page has as a topic the thing whose \nhomepage it is. The homepage is usually controlled, edited or published by the thing whose \nhomepage it is; as such one might look to a homepage for information on its owner from its \nowner. This works for people, companies, organisations etc. \n\n\n\nThe homepage property is a sub-property of the more general \npage property for relating a thing to a page about that thing. See also \ntopic, the inverse of the page property. \n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:isPrimaryTopicOf \n            is primary topic of - A document that this thing is the primary topic of. \n\t    Status:\n\t    stable\n            Domain:\n having this property implies being a  Thing\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n Inverse Functional Property\n   \n            \n            \nThe isPrimaryTopicOf property relates something to a document that is \nmainly about it.\n\n\n\n\nThe isPrimaryTopicOf property is inverse functional: for\nany document that is the value of this property, there is at most one thing in the world\nthat is the primary topic of that document. This is useful, as it allows for data \nmerging, as described in the documentation for its inverse, primaryTopic.\n\n\n\npage is a super-property of isPrimaryTopicOf. The change \nof terminology between the two property names reflects the utility of 'primaryTopic' and its \ninverse when identifying things. Anything that has an isPrimaryTopicOf relation \nto some document X, also has a page relationship to it.\n\n\nNote that homepage, is a sub-property of both page and \nisPrimaryTopicOf. The awkwardly named \nisPrimaryTopicOf is less specific, and can be used with any document \nthat is primarily about the thing of interest (ie. not just on homepages).\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:knows \n            knows - A person known by this person (indicating some level of reciprocated interaction between the parties). \n\t    Status:\n\t    stable\n            Domain:\n having this property implies being a  Person\n\n            Range:\n  every value of this property is a  Person\n\t\n   \n \n            \n            \nThe knows property relates a Person to another \nPerson that he or she knows. \n\n\n\nWe take a broad view of 'knows', but do require some form of reciprocated interaction (ie. \nstalkers need not apply). Since social attitudes and conventions on this topic vary \ngreatly between communities, counties and cultures, it is not appropriate for FOAF to be \noverly-specific here. \n\n\n\nIf someone knows a person, it would be usual for \nthe relation to be reciprocated. However this doesn't mean that there is any obligation \nfor either party to publish FOAF describing this relationship. A knows \nrelationship does not imply friendship, endorsement, or that a face-to-face meeting \nhas taken place: phone, fax, email, and smoke signals are all perfectly \nacceptable ways of communicating with people you know. \n\n\nYou probably know hundreds of people, yet might only list a few in your public FOAF file. \nThat's OK. Or you might list them all. It is perfectly fine to have a FOAF file and not \nlist anyone else in it at all. \nThis illustrates the Semantic Web principle of partial description: RDF documents \nrarely describe the entire picture. There is always more to be said, more information \nliving elsewhere in the Web (or in our heads...).\n\n\n\nSince knows is vague by design, it may be suprising that it has uses. \nTypically these involve combining other RDF properties. For example, an application might \nlook at properties of each weblog that was made by \nsomeone you \"knows\". Or check the newsfeed of the online photo archive \nfor each of these people, to show you recent photos taken by people you know.\n\n\n\nTo provide additional levels of representation beyond mere 'knows', FOAF applications \ncan do several things. \n\n\nThey can use more precise relationships than knows to relate people to \npeople. The original FOAF design included two of these ('knowsWell','friend') which we \nremoved because they were somewhat awkward to actually use, bringing an \ninappopriate air of precision to an intrinsically vague concept. Other extensions have \nbeen proposed, including Eric Vitiello's Relationship module for \nFOAF.\n\n\n\nIn addition to using more specialised inter-personal relationship types \n(eg rel:acquaintanceOf etc) it is often just as good to use RDF descriptions of the states \nof affairs which imply particular kinds of relationship. So for example, two people who \nhave the same value for their workplaceHomepage property are \ntypically colleagues. We don't (currently) clutter FOAF up with these extra relationships, \nbut the facts can be written in FOAF nevertheless. Similarly, if there exists a \nDocument that has two people listed as its makers, \nthen they are probably collaborators of some kind. Or if two people appear in 100s of \ndigital photos together, there's a good chance they're friends and/or colleagues.\n\n\n\nSo FOAF is quite pluralistic in its approach to representing relationships between people. \nFOAF is built on top of a general purpose machine language for representing relationships \n(ie. RDF), so is quite capable of representing any kinds of relationship we care to add. \nThe problems are generally social rather than technical; deciding on appropriate ways of \ndescribing these interconnections is a subtle art.\n\n\n\nPerhaps the most important use of knows is, alongside the \nrdfs:seeAlso property, to connect FOAF files together. Taken alone, a FOAF \nfile is somewhat dull. But linked in with 1000s of other FOAF files it becomes more \ninteresting, with each FOAF file saying a little more about people, places, documents, things... \nBy mentioning other people (via knows or other relationships), and by \nproviding an rdfs:seeAlso link to their FOAF file, you can make it easy for \nFOAF indexing tools ('scutters') to find \nyour FOAF and the FOAF of the people you've mentioned. And the FOAF of the people they \nmention, and so on. This makes it possible to build FOAF aggregators without the need for \na centrally managed directory of FOAF files...\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:made \n            made - Something that was made by this agent. \n\t    Status:\n\t    stable\n            Domain:\n having this property implies being a  Agent\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n \n            \n            \nThe made property relates a Agent \nto something made by it. As such it is an \ninverse of the maker property, which relates a thing to \nsomething that made it. See made for more details on the \nrelationship between these FOAF terms and related Dublin Core vocabulary.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:maker \n            maker - An agent that  made this thing. \n\t    Status:\n\t    stable\n            Domain:\n having this property implies being a  Thing\n\n            Range:\n  every value of this property is a  Agent\n\t\n   \n \n            \n            \nThe maker property relates something to a  \nAgent that made it. As such it is an \ninverse of the made property.\n\n\n\nThe name (or other rdfs:label) of the \nmaker of something can be described as the \ndc:creator of that thing.\n\n\nFor example, if the thing named by the URI \nhttp://danbri.org/ has a \nmaker that is a Person whose \nname is 'Dan Brickley', we can conclude that \nhttp://danbri.org/ has a dc:creator of 'Dan \nBrickley'. \n\n\n\nFOAF descriptions are encouraged to use dc:creator only for \nsimple textual names, and to use maker to indicate \ncreators, rather than risk confusing creators with their names. This \nfollows most Dublin Core usage. See UsingDublinCoreCreator \nfor details.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:mbox \n            personal mailbox - A  personal mailbox, ie. an Internet mailbox associated with exactly one owner, the first owner of this mailbox. This is a 'static inverse functional property', in that  there is (across time and change) at most one individual that ever has any particular value for foaf:mbox. \n\t    Status:\n\t    stable\n            Domain:\n having this property implies being a  Agent\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n Inverse Functional Property\n   \n            \n            \nThe mbox property is a relationship between the owner of a mailbox and \na mailbox. These are typically identified using the mailto: URI scheme (see RFC 2368).\n\n\n\nNote that there are many mailboxes (eg. shared ones) which are not the \nmbox of anyone. Furthermore, a person can have multiple \nmbox properties. \n\n\n\nIn FOAF, we often see mbox used as an indirect way of identifying its \nowner. This works even if the mailbox is itself out of service (eg. 10 years old), since \nthe property is defined in terms of its primary owner, and doesn't require the mailbox to \nactually be being used for anything.\n\n\n\nMany people are wary of sharing information about their mailbox addresses in public. To \naddress such concerns whilst continuing the FOAF convention of indirectly identifying \npeople by referring to widely known properties, FOAF also provides the \nmbox_sha1sum mechanism, which is a relationship between a person and \nthe value you get from passing a mailbox URI to the SHA1 mathematical function.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:member \n            member - Indicates a member of a Group \n\t    Status:\n\t    stable\n            Domain:\n having this property implies being a  Group\n\n            Range:\n  every value of this property is a  Agent\n\t\n   \n \n            \n            \nThe member property relates a Group to a \nAgent that is a member of that group.\n\n\n\nSee Group for details and examples.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:page \n            page - A page or document about this thing. \n\t    Status:\n\t    stable\n            Domain:\n having this property implies being a  Thing\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n \n            \n            \nThe page property relates a thing to a document about that thing.\n\n\n\nAs such it is an inverse of the topic property, which relates a document \nto a thing that the document is about.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:primaryTopic \n            primary topic - The primary topic of some page or document. \n\t    Status:\n\t    stable\n            Domain:\n having this property implies being a  Document\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n Functional Property\n   \n            \n            \nThe primaryTopic property relates a document to the\nmain thing that the document is about.\n\n\n\nThe primaryTopic property is functional: for\nany document it applies to, it can have at most one value. This is\nuseful, as it allows for data merging. In many cases it may be difficult\nfor third parties to determine the primary topic of a document, but in\na useful number of cases (eg. descriptions of movies, restaurants,\npoliticians, ...) it should be reasonably obvious. Documents are very\noften the most authoritative source of information about their own\nprimary topics, although this cannot be guaranteed since documents cannot be\nassumed to be accurate, honest etc.\n\n\n\nIt is an inverse of the isPrimaryTopicOf property, which relates a \nthing to  a document primarily about that thing. The choice between these two \nproperties is purely pragmatic. When describing documents, we \nuse primaryTopic former to point to the things they're about. When \ndescribing things (people etc.), it is useful to be able to directly cite documents which \nhave those things as their main topic - so we use isPrimaryTopicOf. In this \nway, Web sites such as Wikipedia or NNDB can provide indirect identification for the things they \nhave descriptions of.\n\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:weblog \n            weblog - A weblog of some thing (whether person, group, company etc.). \n\t    Status:\n\t    stable\n            Domain:\n having this property implies being a  Agent\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n Inverse Functional Property\n   \n            \n            \nThe weblog property relates a Agent to a weblog of \nthat agent.\n\n\n            [#]  [back to top]\n            \n            \n\n            Property: foaf:account \n            account - Indicates an account held by this agent. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            Range:\n  every value of this property is a  Online Account\n\t\n   \n \n            \n            \nThe account property relates a Agent to an \nOnlineAccount for which they are the sole account holder. See \nOnlineAccount for usage details.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:accountName \n            account name - Indicates the name (identifier) associated with this online account. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Online Account\n\n            \n   \n \n            \n            \nThe accountName property of a OnlineAccount is a \ntextual representation of the account name (unique ID) associated with that account.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:accountServiceHomepage \n            account service homepage - Indicates a homepage of the service provide for this online account. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Online Account\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n \n            \n            \nThe accountServiceHomepage property indicates a relationship between a \nOnlineAccount and the homepage of the supporting service provider.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:aimChatID \n            AIM chat ID - An AIM chat ID \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            \n   \n Inverse Functional Property\n   \n            \n            \nThe aimChatID property relates a Agent to a textual \nidentifier ('screenname') assigned to them in the AOL Instant Messanger (AIM) system. \nSee AOL's AIM site for more details of AIM and AIM \nscreennames. The iChat tools from Apple also make use of AIM identifiers. \n\n\n\nSee OnlineChatAccount (and OnlineAccount) for a\nmore general (and verbose) mechanism for describing IM and chat accounts.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:based_near \n            based near - A location that something is based near, for some broadly human notion of near. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Spatial Thing\n\n            Range:\n  every value of this property is a  Spatial Thing\n\t\n   \n \n            \n            \n\nThe based_near relationship relates two \"spatial \nthings\"\n(anything that can be somewhere), the latter typically\ndescribed using the geo:lat / geo:long\ngeo-positioning vocabulary\n(See GeoInfo in the W3C semweb\nwiki for details). This allows us to say describe the typical latitute and \nlongitude of, say, a Person (people are spatial things - they can be \nplaces) without implying that a precise location has been given.\n\n\nWe do not say much about what 'near' means in this context; it is a\n'rough and ready' concept. For a more precise treatment, see\nGeoOnion vocab design\ndiscussions, which are aiming to produce a more sophisticated vocabulary for \nsuch purposes.\n\n\n FOAF files often make use of the contact:nearestAirport property. This\nillustrates the distinction between FOAF documents (which may make claims using any RDF\nvocabulary) and the core FOAF vocabulary defined by this specification. For further reading on\nthe use of nearestAirport see UsingContactNearestAirport in the \nFOAF wiki.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:currentProject \n            current project - A current project this person works on. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n \n            \n            \n\nA currentProject relates a Person\nto a Document indicating some collaborative or\nindividual undertaking.  This relationship\nindicates that the Person has some active role in the\nproject, such as development, coordination, or support.\n\nWhen a Person is no longer involved with a project, or\nperhaps is inactive for some time, the relationship becomes a\npastProject.\n\n\nIf the Person has stopped working on a project because it\nhas been completed (successfully or otherwise), pastProject is\napplicable. In general, currentProject is used to indicate\nsomeone's current efforts (and implied interests, concerns etc.), while\npastProject describes what they've previously been doing.\n\n\n\n\n\nNote that this property requires further work. There has been confusion about \nwhether it points to a thing (eg. something you've made; a homepage for a project, \nie. a Document or to instances of the class Project, \nwhich might themselves have a homepage. In practice, it seems to have been \nused in a similar way to interest, referencing homepages of ongoing projects.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:depiction \n            depiction - A depiction of some thing. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Thing\n\n            Range:\n  every value of this property is a  Image\n\t\n   \n \n            \n            \nThe depiction property is a relationship between a thing and an \nImage that depicts it. As such it is an inverse of the\ndepicts relationship. \n\n\n\nA common use of depiction (and depicts) is to indicate \nthe contents of a digital image, for example the people or objects represented in an \nonline photo gallery. \n\n\n\nExtensions to this basic idea include 'Co-Depiction' (social networks as evidenced in \nphotos), as well as richer photo metadata through the mechanism  of using SVG paths to \nindicate the regions of an image which depict some particular thing. See 'Annotating Images With SVG' \nfor tools and details.\n\n\n\nThe basic notion of 'depiction' could also be extended to deal with multimedia content \n(video clips, audio), or refined to deal with corner cases, such as pictures of pictures etc.\n\n\n\nThe depiction property is a super-property of the more specific property \nimg, which is used more sparingly. You stand in a \ndepiction relation to any Image that depicts \nyou, whereas img is typically used to indicate a few images that are \nparticularly representative.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:depicts \n            depicts - A thing depicted in this representation. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Image\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n \n            \n            \nThe depicts property is a relationship between a Image \nand something that the image depicts. As such it is an inverse of the \ndepiction relationship. See depiction for further notes.\n\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:familyName \n            familyName - The family name of some person. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            \n   \n \n            \n            \nThe familyName property is provided (alongside givenName) for use when describing parts of people's names. Although these\nconcepts do not capture the full range of personal naming styles found world-wide, they are commonly used and have some value.\n\n\nThere is also a simple name property.\n\n\n\nSupport is also provided for the more archaic and culturally varying terminology of firstName and lastName.\n\n\n\nSee the issue tracker for design discussions, status and ongoing work on rationalising the FOAF\nnaming machinery.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:firstName \n            firstName - The first name of a person. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            \n   \n \n            \n            \nThe firstName property is provided (alongside lastName) as a mechanism to support legacy data that cannot be\neasily interpreted in terms of the (otherwise preferred) familyName and givenName properties. The concepts\nof 'first' and 'last' names do not work well across cultural and linguistic boundaries; however they are widely used in addressbooks and databases.\n\n\nSee the issue tracker for design discussions, status and ongoing work on rationalising the FOAF\nnaming machinery.\n\n\nThere is also a simple name property.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:focus \n            focus - The underlying or 'focal' entity associated with some SKOS-described concept. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Concept\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n \n            \n            \nThe focus property relates a conceptualisation of something to the thing itself.\nSpecifically, it is designed for use with W3C's SKOS \nvocabulary, to help indicate specific individual things (typically people, places, artifacts) \nthat are mentioned in different SKOS schemes (eg. thesauri).\n\n\n\nW3C SKOS is based around collections of linked 'concepts', which indicate topics, subject areas and categories. \nIn SKOS,\nproperties of a skos:Concept are properties of the conceptualization (see 2005 discussion for details); \nfor example administrative and record-keeping metadata. Two schemes might have an entry for the same individual; the foaf:focus property\ncan be used to indicate the thing in they world that they both focus on. Many SKOS concepts don't work this way; \nbroad topical areas and subject categories don't typically correspond to some particular entity. However, in cases\nwhen they do, it is useful to link both subject-oriented and thing-oriented information via foaf:focus.\n\n\n\nFOAF's focus property works alongside its other topic-oriented constructs: topic, primaryTopic \nare used when talking about the topical emphasis of a document. The notion of primaryTopic \nis particularly important in FOAF as it provides an indirect mechanism for identifying things indirectly. A\nsimilar approach is explored by the TDB URI scheme. FOAF includes topic-oriented \nfunctionality to address its original goals of linking people to information,\nas well as to other people, through the use of linked information.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:gender \n            gender - The gender of this Agent (typically but not necessarily 'male' or 'female'). \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            \n   \n Functional Property\n   \n            \n            \nThe gender property relates a Agent (typically a \nPerson) to a string representing its gender. In most cases the value \nwill be the string 'female' or 'male' (in lowercase without surrounding quotes or spaces). \nLike all FOAF properties, there is in general no requirement to use  \ngender in any particular document or description. Values other than \n'male' and 'female' may be used, but are not enumerated here. The gender \nmechanism is not intended to capture the full variety of biological, social and sexual \nconcepts associated with the word 'gender'. \n\n\n\nAnything that has a gender property will be some kind of \nAgent. However there are kinds of Agent to \nwhich the concept of gender isn't applicable (eg. a Group). FOAF does not \ncurrently include a class corresponding directly to \"the type of thing that has a gender\".\nAt any point in time, a Agent has at most one value for \ngender. FOAF does not treat gender as a \nstatic property; the same individual may have different values for this property \nat different times.\n\n\n\nNote that FOAF's notion of gender isn't defined biologically or anatomically - this would \nbe tricky since we have a broad notion that applies to all Agents \n(including robots - eg. Bender from Futurama is 'male'). As stressed above, \nFOAF's notion of gender doesn't attempt to encompass the full range of concepts associated \nwith human gender, biology and sexuality. As such it is a (perhaps awkward) compromise \nbetween the clinical and the social/psychological. In general, a person will be the best \nauthority on their gender. Feedback on this design is \nparticularly welcome (via the FOAF mailing list, \nfoaf-dev). We have tried to \nbe respectful of diversity without attempting to catalogue or enumerate that diversity. \n\n\n\nThis may also be a good point for a periodic reminder: as with all FOAF properties, \ndocuments that use 'gender' will on occassion be innacurate, misleading \nor outright false. FOAF, like all open means of communication, supports lying.\n Application authors using \nFOAF data should always be cautious in their presentation of unverified information, but be \nparticularly sensitive to issues and risks surrounding sex and gender (including privacy \nand personal safety concerns). Designers of FOAF-based user interfaces should be careful to allow users to omit \ngender when describing themselves and others, and to allow at least for \nvalues other than 'male' and 'female' as options. Users of information \nconveyed via FOAF (as via information conveyed through mobile phone text messages, email, \nInternet chat, HTML pages etc.) should be skeptical of unverified information.\n\n \n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:givenName \n            Given name - The given name of some person. \n\t    Status:\n\t    testing\n            \n            \n   \n \n            \n            \nThe givenName property is provided (alongside familyName) for use when describing parts of people's names. Although these\nconcepts do not capture the full range of personal naming styles found world-wide, they are commonly used and have some value. \n\n\nThere is also a simple name property.\n\n\n\nSupport is also provided for the more archaic and culturally varying terminology of firstName and lastName.\n\n\n\nSee the issue tracker for design discussions, status and ongoing work on rationalising the FOAF\nnaming machinery.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:icqChatID \n            ICQ chat ID - An ICQ chat ID \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            \n   \n Inverse Functional Property\n   \n            \n            \nThe icqChatID property relates a Agent to a textual \nidentifier assigned to them in the ICQ Chat system. \nSee the icq chat site for more details of the 'icq' \nservice. Their \"What is ICQ?\" document \nprovides a basic overview, while their \"About Us page \nnotes that ICQ has been acquired by AOL. Despite the relationship with AOL, ICQ is at \nthe time of writing maintained as a separate identity from the AIM brand (see \naimChatID).\n\n\n\nSee OnlineChatAccount (and OnlineAccount) for a\nmore general (and verbose) mechanism for describing IM and chat accounts.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:img \n            image - An image that can be used to represent some thing (ie. those depictions which are particularly representative of something, eg. one's photo on a homepage). \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            Range:\n  every value of this property is a  Image\n\t\n   \n \n            \n            \nThe img property relates a Person to a \nImage that represents them. Unlike its super-property \ndepiction, we only use img when an image is \nparticularly representative of some person. The analogy is with the image(s) that might \nappear on someone's homepage, rather than happen to appear somewhere in their photo album.\n\n\n\nUnlike the more general depiction property (and its inverse, \ndepicts), the img property is only used with \nrepresentations of people (ie. instances of Person). So you can't use \nit to find pictures of cats, dogs etc. The basic idea is to have a term whose use is more \nrestricted than depiction so we can have a useful way of picking out a \nreasonable image to represent someone. FOAF defines img as a \nsub-property of depiction, which means that the latter relationship is \nimplied whenever two things are related by the former.\n\n\n\nNote that img does not have any restrictions on the dimensions, colour \ndepth, format etc of the Image it references. \n\n\n\nTerminology: note that img is a property (ie. relationship), and that \ncode:Image is a similarly named class (ie. category, a type of thing). It \nmight have been more helpful to call img 'mugshot' or similar; instead \nit is named by analogy to the HTML IMG element.\n \n\n            [#]  [back to top]\n            \n            \n            Property: foaf:interest \n            interest - A page about a topic of interest to this person. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n \n            \n            \nThe interest property represents an interest of a \nAgent, through \nindicating a Document whose topic(s) broadly \ncharacterises that interest.\n\n\nFor example, we might claim that a person or group has an interest in RDF by saying they\nstand in a interest relationship to the RDF home page. Loosly, such RDF would be saying \n\"this agent is interested in the topic of this page\".\n\n\n\nUses of interest include a variety of filtering and resource discovery \napplications. It could be used, for example, to help find answers to questions such as \n\"Find me members of this organisation with an interest in XML who have also contributed to \nCPAN)\". \n\n\n\nThis approach to characterising interests is intended to compliment other mechanisms (such \nas the use of controlled vocabulary). It allows us to use a widely known set of unique \nidentifiers (Web page URIs) with minimal pre-coordination. Since URIs have a controlled \nsyntax, this makes data merging much easier than the use of free-text characterisations of \ninterest.\n\n\n\n\nNote that interest does not imply expertise, and that this FOAF term provides no support \nfor characterising levels of interest: passing fads and lifelong quests are both examples \nof someone's interest. Describing interests in full is a complex \nundertaking; interest provides one basic component of FOAF's approach to \nthese problems.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:jabberID \n            jabber ID - A jabber ID for something. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            \n   \n Inverse Functional Property\n   \n            \n            \nThe jabberID property relates a Agent to a textual \nidentifier assigned to them in the Jabber messaging \nsystem. \nSee the Jabber site for more information about the Jabber \nprotocols and tools.\n\n\n\nJabber, unlike several other online messaging systems, is based on an open, publically \ndocumented protocol specification, and has a variety of open source implementations. Jabber IDs \ncan be assigned to a variety of kinds of thing, including software 'bots', chat rooms etc. For \nthe purposes of FOAF, these are all considered to be kinds of Agent (ie. \nthings that do stuff). The uses of Jabber go beyond simple IM chat applications. The \njabberID property is provided as a basic hook to help support RDF description \nof Jabber users and services.\n\n\n\nSee OnlineChatAccount (and OnlineAccount) for a\nmore general (and verbose) mechanism for describing IM and chat accounts.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:lastName \n            lastName - The last name of a person. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            \n   \n \n            \n            \nThe lastName property is provided (alongside firstName) as a mechanism to support legacy data that cannot be\neasily interpreted in terms of the (otherwise preferred) familyName and givenName properties. The concepts \nof 'first' and 'last' names do not work well across cultural and linguistic boundaries; however they are widely used in addressbooks and databases.\n\n\nSee the issue tracker for design discussions, status and ongoing work on rationalising the FOAF \nnaming machinery.\n\n\nThere is also a simple name property.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:logo \n            logo - A logo representing some thing. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Thing\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n Inverse Functional Property\n   \n            \n            \nThe logo property is used to indicate a graphical logo of some kind. \nIt is probably underspecified...\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:mbox_sha1sum \n            sha1sum of a personal mailbox URI name - The sha1sum of the URI of an Internet mailbox associated with exactly one owner, the  first owner of the mailbox. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            \n   \n Inverse Functional Property\n   \n            \n            \nA mbox_sha1sum of a Person is a textual representation of \nthe result of applying the SHA1 mathematical functional to a 'mailto:' identifier (URI) for an \nInternet mailbox that they stand in a mbox relationship to.\n\n\n\nIn other words, if you have a mailbox (mbox) but don't want to reveal its \naddress, you can take that address and generate a mbox_sha1sum representation \nof it. Just as a mbox can be used as an indirect identifier for its owner, we \ncan do the same with mbox_sha1sum since there is only one \nPerson with any particular value for that property.\n\n\n\nMany FOAF tools use mbox_sha1sum in preference to exposing mailbox \ninformation. This is usually for privacy and SPAM-avoidance reasons. Other relevant techniques \ninclude the use of PGP encryption (see Edd Dumbill's \ndocumentation) and the use of FOAF-based whitelists for \nmail filtering.\n\n\n\nCode examples for SHA1 in C#, Java, PHP, Perl and Python can be found in Sam Ruby's \nweblog entry. Remember to include the 'mailto:' prefix, but no trailing \nwhitespace, when computing a mbox_sha1sum property.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:msnChatID \n            MSN chat ID - An MSN chat ID \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            \n   \n Inverse Functional Property\n   \n            \n            \nThe msnChatID property relates a Agent to a textual \nidentifier assigned to them in the Microsoft online chat system originally known as 'MSN', and now \nWindows Live Messenger.\nSee the Microsoft mesenger and Windows Live ID sites for more details.\n\n\nSee OnlineChatAccount (and OnlineAccount) for a \nmore general (and verbose) mechanism for describing IM and chat accounts. \n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:myersBriggs \n            myersBriggs - A Myers Briggs (MBTI) personality classification. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            \n   \n \n            \n            \n\n\nThe myersBriggs property represents the Myers Briggs (MBTI) approach to \npersonality taxonomy. It is included in FOAF as an example of a property \nthat takes certain constrained values, and to give some additional detail to the FOAF \nfiles of those who choose to include it. The myersBriggs property applies only to the \nPerson class; wherever you see it, you can infer it is being applied to \na person.\n\n\n\nThe myersBriggs property is interesting in that it illustrates how \nFOAF can serve as a carrier for various kinds of information, without necessarily being \ncommited to any associated worldview. Not everyone will find myersBriggs (or star signs, \nor blood types, or the four humours) a useful perspective on human behaviour and \npersonality. The inclusion of a Myers Briggs property doesn't indicate that FOAF endorses \nthe underlying theory, any more than the existence of weblog is an \nendorsement of soapboxes.\n\n\n\nThe values for myersBriggs are the following 16 4-letter textual codes: \nESTJ, INFP, ESFP, INTJ, ESFJ, INTP, ENFP, ISTJ, ESTP, INFJ, ENFJ, ISTP, ENTJ, ISFP, \nENTP, ISFJ. If multiple of these properties are applicable, they are represented by \napplying multiple properties to a person.\n\n\n\nFor further reading on MBTI, see various online sources (eg. this article). There \nare various online sites which offer quiz-based tools for determining a person's MBTI \nclassification. The owners of the MBTI trademark have probably not approved of these.\n\n\n\nThis FOAF property suggests some interesting uses, some of which could perhaps be used to \ntest the claims made by proponents of the MBTI (eg. an analysis of weblog postings \nfiltered by MBTI type). However it should be noted that MBTI FOAF descriptions are \nself-selecting; MBTI categories may not be uniformly appealing to the people they \ndescribe. Further, there is probably a degree of cultural specificity implicit in the \nassumptions made by many questionaire-based MBTI tools; the MBTI system may not make \nsense in cultural settings beyond those it was created for. \n\n\n\nSee also Cory Caplinger's summary table or the RDFWeb article, FOAF Myers Briggs addition \nfor further background and examples.\n\n\n\nNote: Myers Briggs Type Indicator and MBTI are registered trademarks of Consulting \nPsychologists Press Inc. Oxford Psycholgists Press Ltd has exclusive rights to the \ntrademark in the UK. \n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:name \n            name - A name for some thing. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Thing\n\n            \n   \n \n            \n            The name of something is a simple textual string.\n\n\nXML language tagging may be used to indicate the language of the name. For example:\n\n\n\n<foaf:name xml:lang=\"en\">Dan Brickley</foaf:name>\n\n\n\n\nFOAF provides some other naming constructs.  While foaf:name does not explicitly represent name substructure (family vs given etc.) it \ndoes provide a basic level of interoperability. See the issue tracker for status of work on this issue.\n\n\n\nThe name property, like all RDF properties with a range of rdfs:Literal, may be used with XMLLiteral datatyped \nvalues (multiple names are acceptable whether they are in the same langauge or not). XMLLiteral usage is not yet widely adopted. Feedback on this aspect of the FOAF design is particularly welcomed.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:nick \n            nickname - A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames). \n\t    Status:\n\t    testing\n            \n            \n   \n \n            \n            \nThe nick property relates a Person to a short (often \nabbreviated) nickname, such as those use in IRC chat, online accounts, and computer \nlogins.\n\n\n\nThis property is necessarily vague, because it does not indicate any particular naming \ncontrol authority, and so cannot distinguish a person's login from their (possibly \nvarious) IRC nicknames or other similar identifiers. However it has some utility, since \nmany people use the same string (or slight variants) across a variety of such \nenvironments.\n\n\n\nFor specific controlled sets of names (relating primarily to Instant Messanger accounts), \nFOAF provides some convenience properties: jabberID, \naimChatID, msnChatID and \nicqChatID. Beyond this, the problem of representing such accounts is not \npeculiar to Instant Messanging, and it is not scaleable to attempt to enumerate each \nnaming database as a distinct FOAF property. The OnlineAccount term (and \nsupporting vocabulary) are provided as a more verbose and more expressive generalisation \nof these properties.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:openid \n            openid - An OpenID for an Agent. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n Inverse Functional Property\n   \n            \n            \nA openid is a property of a Agent that associates it with a document that can be used as an indirect identifier in the manner of the OpenID\n \"Identity URL\". As the OpenID 1.1 specification notes, OpenID itself\"does not provide any mechanism to \nexchange profile information, though Consumers of an Identity can learn more about an End User from any public, semantically \ninteresting documents linked thereunder (FOAF, RSS, Atom, vCARD, etc.)\". In this way, FOAF and OpenID complement each other; \nneither provides a stand-alone approach to online \"trust\", but combined they can address interesting parts of this larger problem \nspace.\n\n\n\nThe openid property is \"inverse functional\", meaning that anything that is the foaf:openid of something, is the \nopenid of no more than one thing. FOAF is agnostic as to whether there are (according to the relevant OpenID \nspecifications) OpenID URIs that are equally associated with multiple Agents. FOAF offers sub-classes of Agent, ie. \nOrganization and Group, that allow for such scenarios to be consistent with the notion that any \nfoaf:openid is the foaf:openid of just one Agent.\n\n\n\nFOAF does not mandate any particular URI scheme for use as openid values. The OpenID 1.1 specification includes a delegation model that is often used to \nallow a weblog or homepage document to also serve in OpenID authentication via \"link rel\" HTML markup. This deployment model provides a \nconvenient connection to FOAF, since a similar technique is used for FOAF \nautodiscovery in HTML. A single document can, for example, serve both as a homepage and an OpenID identity URL.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:pastProject \n            past project - A project this person has previously worked on. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n \n            \n            After a Person is no longer involved with a\ncurrentProject, or has been inactive for some time, a\npastProject relationship can be used. This indicates that\nthe Person was involved with the described project at one\npoint. \n\n\n\nIf the Person has stopped working on a project because it \nhas been completed (successfully or otherwise), pastProject is \napplicable. In general, currentProject is used to indicate \nsomeone's current efforts (and implied interests, concerns etc.), while \npastProject describes what they've previously been doing.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:phone \n            phone - A phone,  specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel). \n\t    Status:\n\t    testing\n            \n            \n   \n \n            \n            \nThe phone of something is a phone, typically identified using the tel: URI \nscheme.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:plan \n            plan - A .plan comment, in the tradition of finger and '.plan' files. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            \n   \n \n            \n            \n\nThe plan property provides a space for a\nPerson to hold some arbitrary content that would appear in\na traditional '.plan' file.  The plan file was stored in a user's home\ndirectory on a UNIX machine, and displayed to people when the user was\nqueried with the finger utility.\n\nA plan file could contain anything.  Typical uses included brief\ncomments, thoughts, or remarks on what a person had been doing lately.  Plan\nfiles were also prone to being witty or simply osbscure.  Others may be more\ncreative, writing any number of seemingly random compositions in their plan\nfile for people to stumble upon.\n\n\nSee History of the \nFinger Protocol by Rajiv Shah for more on this piece of Internet history. The \ngeekcode property may also be of interest.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:publications \n            publications - A link to the publications of this person. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n \n            \n            \nThe publications property indicates a Document\nlisting (primarily in human-readable form) some publications associated with the  \nPerson. Such documents are typically published alongside one's \nhomepage.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:schoolHomepage \n            schoolHomepage - A homepage of a school attended by the person. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n \n            \n            \nThe schoolHomepage property relates a Person to a \nDocument that is the homepage of a School that the \nperson attended.\n\n\n\nFOAF does not (currently) define a class for 'School' (if it did, it would probably be as \na sub-class of Organization). The original application area for \nschoolHomepage was for 'schools' in the British-English sense; however \nAmerican-English usage has dominated, and it is now perfectly reasonable to describe \nUniversities, Colleges and post-graduate study using schoolHomepage.\n\n\n\nThis very basic facility provides a basis for a low-cost, decentralised approach to \nclassmate-reunion and suchlike. Instead of requiring a central database, we can use FOAF \nto express claims such as 'I studied here' simply by mentioning a \nschool's homepage within FOAF files. Given the homepage of a school, it is easy for \nFOAF aggregators to lookup this property in search of people who attended that school.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:skypeID \n            Skype ID - A Skype ID \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            \n   \n \n            \n            \nThe skype property relates a Agent to an account name of \na Skype account of theirs.\n\n\n\nSee OnlineChatAccount (and OnlineAccount) for a\nmore general (and verbose) mechanism for describing IM and chat accounts.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:thumbnail \n            thumbnail - A derived thumbnail image. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Image\n\n            Range:\n  every value of this property is a  Image\n\t\n   \n \n            \n            \n\n\nThe thumbnail property is a relationship between a \nfull-size Image and a smaller, representative Image \nthat has been derrived from it. \n\n\n\nIt is typical in FOAF to express img and depiction \nrelationships in terms of the larger, 'main' (in some sense) image, rather than its thumbnail(s). \nA thumbnail might be clipped or otherwise reduced such that it does not \ndepict everything that the full image depicts. Therefore FOAF does not specify that a \nthumbnail depicts everything that the image it is derrived from depicts.\nHowever, FOAF does expect that anything depicted in the thumbnail will also be depicted in \nthe source image.\n\n\n\n\n\nA thumbnail is typically small enough that it can be\nloaded and viewed quickly before a viewer decides to download the larger\nversion. They are often used in online photo gallery applications.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:tipjar \n            tipjar - A tipjar document for this agent, describing means for payment and reward. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n \n            \n            \nThe tipjar property relates an Agent\nto a Document that describes some mechanisms for\npaying or otherwise rewarding that agent.\n\n\n\nThe tipjar property was created following discussions \nabout simple, lightweight mechanisms that could be used to encourage \nrewards and payment for content exchanged online. An agent's\ntipjar page(s) could describe informal (\"Send me a\npostcard!\", \"here's my book, music and movie wishlist\") or formal\n(machine-readable micropayment information) information about how that\nagent can be paid or rewarded. The reward is not associated with any\nparticular action or content from the agent concerned. A link to \na service such as PayPal is the\nsort of thing we might expect to find in a tipjar document.\n\n\n\nNote that the value of a tipjar property is just a\ndocument (which can include anchors into HTML pages). We expect, but \ndo not currently specify, that this will evolve into a hook\nfor finding more machine-readable information to support payments,\nrewards. The OnlineAccount machinery is also relevant,\nalthough the information requirements for automating payments are not \ncurrently clear.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:title \n            title - Title (Mr, Mrs, Ms, Dr. etc) \n\t    Status:\n\t    testing\n            \n            \n   \n \n            \n            \nThis property is a candidate for deprecation in favour of 'honorificPrefix' following Portable Contacts usage. See the FOAF Issue Tracker.\n\n\n\nThe approriate values for title are not formally constrained, and will \nvary across community and context. Values such as 'Mr', 'Mrs', 'Ms', 'Dr' etc. are \nexpected.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:topic \n            topic - A topic of some page or document. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Document\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n \n            \n            \nThe topic property relates a document to a thing that the document is \nabout.\n\n\n\nAs such it is an inverse of the page property, which relates a thing to \na document about that thing.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:topic_interest \n            topic_interest - A thing of interest to this person. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n \n            \n            \nThe topic_interest property links a Agent to a thing that they're interested in. \nUnlike topic it is not indirected through a document, but links the thing directly.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:workInfoHomepage \n            work info homepage - A work info homepage of some person; a page about their work for some organization. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n \n            \n            \nThe workInfoHomepage of a Person is a \nDocument that describes their work. It is generally (but not necessarily) a \ndifferent document from their homepage, and from any \nworkplaceHomepage(s) they may have. \n\n\n\nThe purpose of this property is to distinguish those pages you often see, which describe \nsomeone's professional role within an organisation or project. These aren't really homepages, \nalthough they share some characterstics.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:workplaceHomepage \n            workplace homepage - A workplace homepage of some person; the homepage of an organization they work for. \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Person\n\n            Range:\n  every value of this property is a  Document\n\t\n   \n \n            \n            \nThe workplaceHomepage of a Person is a \nDocument that is the homepage of a \nOrganization that they work for.\n\n\n\nBy directly relating people to the homepages of their workplace, we have a simple convention \nthat takes advantage of a set of widely known identifiers, while taking care not to confuse the \nthings those identifiers identify (ie. organizational homepages) with the actual organizations \nthose homepages describe.\n\n\n\n\nFor example, Dan Brickley works at W3C. Dan is a Person with a \nhomepage of http://danbri.org/; W3C is a \nOrganization with a homepage of http://www.w3.org/. This \nallows us to say that Dan has a workplaceHomepage of http://www.w3.org/.\n\n\n<foaf:Person>\n <foaf:name>Dan Brickley</foaf:name>\n <foaf:workplaceHomepage rdf:resource=\"http://www.w3.org/\"/>\n</foaf:Person>\n\n\n\n\n\nNote that several other FOAF properties work this way; \nschoolHomepage is the most similar. In general, FOAF often indirectly \nidentifies things via Web page identifiers where possible, since these identifiers are widely \nused and known. FOAF does not currently have a term for the name of the relation (eg. \n\"workplace\") that holds \nbetween a Person and an Organization that they work for.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:yahooChatID \n            Yahoo chat ID - A Yahoo chat ID \n\t    Status:\n\t    testing\n            Domain:\n having this property implies being a  Agent\n\n            \n   \n Inverse Functional Property\n   \n            \n            \nThe yahooChatID property relates a Agent to a textual \nidentifier assigned to them in the Yahoo online Chat system. \nSee Yahoo's the Yahoo! Chat site for more details of their \nservice. Yahoo chat IDs are also used across several other Yahoo services, including email and \nYahoo! Groups.\n\n\n\nSee OnlineChatAccount (and OnlineAccount) for a\nmore general (and verbose) mechanism for describing IM and chat accounts.\n\n\n\n            [#]  [back to top]\n            \n            \n\n            Property: foaf:age \n            age - The age in years of some agent. \n\t    Status:\n\t    unstable\n            Domain:\n having this property implies being a  Agent\n\n            \n   \n Functional Property\n   \n            \n            \nThe age property is a relationship between a Agent \nand an integer string representing their age in years. See also birthday. \n\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:birthday \n            birthday - The birthday of this Agent, represented in mm-dd string form, eg. '12-31'. \n\t    Status:\n\t    unstable\n            Domain:\n having this property implies being a  Agent\n\n            \n   \n Functional Property\n   \n            \n            \nThe birthday property is a relationship between a Agent \nand a string representing the month and day in which they were born (Gregorian calendar).\nSee BirthdayIssue for details of related properties that can \nbe used to describe such things in more flexible ways.\n\n\n\nSee also age.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:membershipClass \n            membershipClass - Indicates the class of individuals that are a member of a Group \n\t    Status:\n\t    unstable\n            \n            \n   \n \n            \n            \nThe membershipClass property relates a Group to an RDF \nclass representing a sub-class of Agent whose instances are all the \nagents that are a member of the Group.\n\n\n\nSee Group for details and examples.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:sha1 \n            sha1sum (hex) - A sha1sum hash, in hex. \n\t    Status:\n\t    unstable\n            Domain:\n having this property implies being a  Document\n\n            \n   \n \n            \n            \nThe sha1 property relates a Document to the textual form of \na SHA1 hash of (some representation of) its contents.\n\n\n\nThe design for this property is neither complete nor coherent. The Document \nclass is currently used in a way that allows multiple instances at different URIs to have the \n'same' contents (and hence hash). If sha1 is an owl:InverseFunctionalProperty, \nwe could deduce that several such documents were the self-same thing. A more careful design is \nneeded, which distinguishes documents in a broad sense from byte sequences.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:status \n            status - A string expressing what the user is happy for the general public (normally) to know about their current activity. \n\t    Status:\n\t    unstable\n            Domain:\n having this property implies being a  Agent\n\n            \n   \n \n            \n            \nstatus is a short textual string expressing what the user is happy\nfor the general public (normally) to know about their current activity. mood, location, etc.\n\n\n\n            [#]  [back to top]\n            \n            \n\n            Property: foaf:dnaChecksum \n            DNA checksum - A checksum for the DNA of some thing. Joke. \n\t    Status:\n\t    archaic\n            \n            \n   \n \n            \n            \nThe dnaChecksum property is mostly a joke, but \nalso a reminder that there will be lots of different identifying \nproperties for people, some of which we might find disturbing. \n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:family_name \n            family_name - The family name of some person. \n\t    Status:\n\t    archaic\n            Domain:\n having this property implies being a  Person\n\n            \n   \n \n            \n            \nThis property is considered an archaic spelling of familyName.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:fundedBy \n            funded by - An organization funding a project or person. \n\t    Status:\n\t    archaic\n            Domain:\n having this property implies being a  Thing\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n \n            \n            \nThe fundedBy property relates something to something else that has provided funding for it.\n\n\n\nThis property is tentatively considered archaic usage, unless we hear about positive implementation experience.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:geekcode \n            geekcode - A textual geekcode for this person, see http://www.geekcode.com/geek.html \n\t    Status:\n\t    archaic\n            Domain:\n having this property implies being a  Person\n\n            \n   \n \n            \n            \nThe geekcode property is used to represent a 'Geek Code' for some \nPerson. \n\n\n\nSee the Wikipedia entry for \ndetails of the code, which provides a somewhat frivolous and willfully obscure mechanism for \ncharacterising technical expertise, interests and habits. The geekcode \nproperty is not bound to any particular version of the code. \n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:givenname \n            Given name - The given name of some person. \n\t    Status:\n\t    archaic\n            \n            \n   \n \n            \n            \nThe givenName property is provided (alongside familyName) for use when describing parts of people's names. Although these\nconcepts do not capture the full range of personal naming styles found world-wide, they are commonly used and have some value. \n\n\nThere is also a simple name property.\n\n\n\nSupport is also provided for the more archaic and culturally varying terminology of firstName and lastName.\n\n\n\nSee the issue tracker for design discussions, status and ongoing work on rationalising the FOAF\nnaming machinery.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:holdsAccount \n            account - Indicates an account held by this agent. \n\t    Status:\n\t    archaic\n            Domain:\n having this property implies being a  Agent\n\n            Range:\n  every value of this property is a  Online Account\n\t\n   \n \n            \n            \nThis property is considered archaic usage. It is generally better to use account instead.\n\n\n\nThe holdsAccount property relates a Agent to an \nOnlineAccount for which they are the sole account holder. See \nOnlineAccount for usage details.\n\n\nThis property is equivalent to the account property, which \nwas introduced primarily to provide simpler naming for the same idea.\n\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:surname \n            Surname - The surname of some person. \n\t    Status:\n\t    archaic\n            Domain:\n having this property implies being a  Person\n\n            \n   \n \n            \n            \n\nA number of naming constructs are under development to provide\nnaming substructure; draft properties include firstName,\ngivenName, and surname. These are not currently \nstable or consistent; see the issue \ntracker for design discussions, status and ongoing work on rationalising the FOAF \nnaming machinery.\n\n\n\nThere is also a simple name property.\n\n\n            [#]  [back to top]\n            \n            \n            Property: foaf:theme \n            theme - A theme. \n\t    Status:\n\t    archaic\n            Domain:\n having this property implies being a  Thing\n\n            Range:\n  every value of this property is a  Thing\n\t\n   \n \n            \n            \nThis property is considered archaic usage, and is not currently recommended for usage.\n\n\n\nThe theme property is rarely used and under-specified. The intention was \nto use it to characterise interest / themes associated with projects and groups. Further \nwork is needed to meet these goals.\n\n\n            [#]  [back to top]"
                ],
                "output": "readability",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:41.633360+00:00",
                "status": "succeeded"
            }
        ],
        "screenshot": [
            {
                "cmd": [
                    "/usr/bin/chromium-browser",
                    "--headless=new",
                    "--no-sandbox",
                    "--no-zygote",
                    "--disable-dev-shm-usage",
                    "--disable-software-rasterizer",
                    "--run-all-compositor-stages-before-draw",
                    "--hide-scrollbars",
                    "--autoplay-policy=no-user-gesture-required",
                    "--no-first-run",
                    "--use-fake-ui-for-media-stream",
                    "--use-fake-device-for-media-stream",
                    "--disable-sync",
                    "--simulate-outdated-no-au='Tue, 31 Dec 2099 23:59:59 GMT'",
                    "--window-size=1440,2000",
                    "--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 ArchiveBox/0.7.3 (+https://github.com/ArchiveBox/ArchiveBox/)",
                    "--screenshot",
                    "http://xmlns.com/foaf/0.1/"
                ],
                "cmd_version": "Chromium 121.0.6167.57",
                "end_ts": "2024-02-12T06:33:39.138926+00:00",
                "index_texts": null,
                "output": "screenshot.png",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:37.527242+00:00",
                "status": "succeeded"
            }
        ],
        "singlefile": [
            {
                "cmd": [
                    "/app/node_modules/single-file-cli/single-file",
                    "--browser-executable-path=chromium-browser",
                    "--browser-args=[\"--headless=new\", \"--no-sandbox\", \"--no-zygote\", \"--disable-dev-shm-usage\", \"--disable-software-rasterizer\", \"--run-all-compositor-stages-before-draw\", \"--hide-scrollbars\", \"--autoplay-policy=no-user-gesture-required\", \"--no-first-run\", \"--use-fake-ui-for-media-stream\", \"--use-fake-device-for-media-stream\", \"--disable-sync\", \"--simulate-outdated-no-au='Tue, 31 Dec 2099 23:59:59 GMT'\", \"--window-size=1440,2000\", \"--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 ArchiveBox/0.7.3 (+https://github.com/ArchiveBox/ArchiveBox/)\"]",
                    "http://xmlns.com/foaf/0.1/",
                    "singlefile.html"
                ],
                "cmd_version": "1.1.46",
                "end_ts": "2024-02-12T06:33:35.765018+00:00",
                "index_texts": null,
                "output": "singlefile.html",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:28.408467+00:00",
                "status": "succeeded"
            }
        ],
        "title": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--max-time",
                    "60",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 ArchiveBox/0.7.3 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 8.5.0 (x86_64-pc-linux-gnu)",
                    "http://xmlns.com/foaf/0.1/"
                ],
                "cmd_version": "curl 8.5.0 (x86_64-pc-linux-gnu)",
                "end_ts": "2024-02-12T06:33:41.627280+00:00",
                "index_texts": null,
                "output": "FOAF Vocabulary Specification",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:41.611340+00:00",
                "status": "succeeded"
            }
        ],
        "wget": [
            {
                "cmd": [
                    "wget",
                    "--no-verbose",
                    "--adjust-extension",
                    "--convert-links",
                    "--force-directories",
                    "--backup-converted",
                    "--span-hosts",
                    "--no-parent",
                    "-e",
                    "robots=off",
                    "--timeout=60",
                    "--restrict-file-names=windows",
                    "--warc-file=/data/archive/1707717218.226828/warc/1707719620",
                    "--page-requisites",
                    "--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 ArchiveBox/0.7.3 (+https://github.com/ArchiveBox/ArchiveBox/) wget/GNU Wget 1.21.3",
                    "--compression=auto",
                    "http://xmlns.com/foaf/0.1/"
                ],
                "cmd_version": "GNU Wget 1.21.3",
                "end_ts": "2024-02-12T06:33:41.591069+00:00",
                "index_texts": null,
                "output": "xmlns.com/foaf/0.1/index.html",
                "pwd": "/data/archive/1707717218.226828",
                "schema": "ArchiveResult",
                "start_ts": "2024-02-12T06:33:40.540853+00:00",
                "status": "succeeded"
            }
        ]
    },
    "icons": null,
    "is_archived": true,
    "is_static": false,
    "latest": {
        "archive_org": "TimeoutExpired: Command '['curl', '--silent', '--location', '--compressed', '--head', '--max-time', '60', '--user-agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 ArchiveBox/0.7.3 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 8.5.0 (x86_64-pc-linux-gnu)', 'https://web.archive.org/save/http://xmlns.com/foaf/0.1/']' timed out after 60 seconds",
        "dom": "output.html",
        "favicon": "favicon.ico",
        "git": null,
        "media": "media",
        "pdf": "output.pdf",
        "screenshot": "screenshot.png",
        "singlefile": "singlefile.html",
        "title": "FOAF Vocabulary Specification",
        "warc": null,
        "wget": "xmlns.com/foaf/0.1/index.html"
    },
    "link_dir": "/data/archive/1707717218.226828",
    "newest_archive_date": "2024-02-12T06:33:46.398037+00:00",
    "num_failures": 1,
    "num_outputs": 11,
    "oldest_archive_date": "2024-02-12T06:33:27.624984+00:00",
    "path": "/foaf/0.1/",
    "schema": "Link",
    "scheme": "http",
    "snapshot_id": "5d9f69fb-bc4e-4bf1-9ee4-8db73351941a",
    "sources": [
        "/data/sources/1707717217.88551-crawl-www.bea.gov.txt"
    ],
    "tags": null,
    "tags_str": "",
    "timestamp": "1707717218.226828",
    "title": "FOAF Vocabulary Specification",
    "updated": "2024-02-12T06:33:27.622995+00:00",
    "updated_date": "2024-02-12 06:33",
    "url": "http://xmlns.com/foaf/0.1/"
}